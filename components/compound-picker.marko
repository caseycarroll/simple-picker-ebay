class {
    onCreate() {
        this.state = {
            selectedTabIndex: 0,
            selectedItems: {},
            navigationLevelIndex: 0,
            selectedRowIndex: 0
        }
    }

    selectTab({index}) {
        this.state.selectedTabIndex = index
    }

    toggleItem(selectedCell, {pressed}) {
        const clone = {...this.state.selectedItems};
        if(pressed) {
            clone[selectedCell.selectionId] = selectedCell;
        } else {
            delete clone[selectedCell.selectionId];
        }
        this.state.selectedItems = clone;
    }

    selectRow(rowIndex) {
        this.state.navigationLevelIndex++;
        this.state.selectedRowIndex = rowIndex;
    }

    navigateBack() {
        this.state.navigationLevelIndex--;
    }
}

style {
    .wrapper {
        max-width: 500px;
        border: 1px solid black;
        border-radius: 3px;
        padding: 8px;
    }

    .flow > * + * {
        margin-block-start: 16px;
    }

    .cluster {
        display: flex;
        gap: 8px;
    }
}

<div class="wrapper flow">
<if(state.navigationLevelIndex === 0)>
    <if(input.tab)>
        <ebay-segmented-buttons on-change("selectTab")>
            <for|tab, index| of=input.tab>
                <@button selected=index === state.selectedTabIndex>
                    <${tab.renderBody} />
                </@button>
            </for>
        </ebay-segmented-buttons>
    </if>

    <for|panel, index| of=input.panel>

        <if(panel.grid && index === state.selectedTabIndex)>
            <for|cell| of=panel.grid.cell>
                <ebay-toggle-button 
                    on-toggle("toggleItem", cell)
                    pressed=Object.hasOwn(state.selectedItems, cell.selectionId)>
                    <${cell.renderBody} />
                </ebay-toggle-button>
            </for>
        </if>
        
        <if(panel.grouping && index === state.selectedTabIndex)>
            <ebay-accordion>
                <@details>
                    <@summary>${panel.grouping.title}</@summary>
                    <for|cell| of=panel.grouping.grid.cell>
                        <ebay-toggle-button 
                            on-toggle("toggleItem", cell)
                            pressed=Object.hasOwn(state.selectedItems, cell.selectionId)>
                            <${cell.renderBody} />
                        </ebay-toggle-button>
                    </for>
                </@details>
            </ebay-accordion>
        </if>

        <if(panel.rowButton && index === state.selectedTabIndex)>
            <for|rowButton, index| of=panel.rowButton>
                <div>
                    <button on-click("selectRow", index)>
                        <${rowButton.renderBody} />
                    </button>
                </div>
            </for>
        </if>
    </for>
</if>
<else>
    $ const selectedPanel = input.panel[state.selectedTabIndex]
    $ const selectedRow = selectedPanel.row[state.selectedRowIndex]

    <div class="cluster">
        <button on-click("navigateBack")>
            Back
        </button>

        <h3>
            ${selectedRow.title}
        </h3>
    </div>

    <if(selectedRow.grid)>
        <for|cell| of=selectedRow.grid.cell>
            <ebay-toggle-button 
                on-toggle("toggleItem", cell)
                pressed=Object.hasOwn(state.selectedItems, cell.selectionId)>
                <${cell.renderBody} />
            </ebay-toggle-button>
        </for>
    </if>
    
    <if(selectedRow.grouping)>
        <ebay-accordion>
            <@details>
                <@summary>${selectedRow.grouping.title}</@summary>
                <for|cell| of=selectedRow.grouping.grid.cell>
                    <ebay-toggle-button 
                        on-toggle("toggleItem", cell)
                        pressed=Object.hasOwn(state.selectedItems, cell.selectionId)>
                        <${cell.renderBody} />
                    </ebay-toggle-button>
                </for>
            </@details>
        </ebay-accordion>
    </if>

</else>
</div>



$ const selectedJson = JSON.stringify(state.selectedItems);
<h3>State Debug</h3>
<table>
    <thead>
        <th>
            Name
        </th>
        <th>
            Value
        </th>
    </thead>
    <tbody>
        <tr>
            <th>
                selectedAspects:
            </th>
            <td>
                ${selectedJson}
            </td>
        </tr>
        <tr>
            <th>
                selectedCategoryIndex:
            </th>
            <td>
                ${state.selectedTabIndex}
            </td>
        </tr>
    </tbody>
</table>